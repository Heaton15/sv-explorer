use crate::lexer::{Token, ArgumentError};
use crate::ast::Command;

grammar;

extern {
  type Error = ArgumentError;

  enum Token {
    "incdir" => Token::IncludeDir,
    "define" => Token::Define,
    "path" => Token::PathContent(<String>),
    "v" => Token::V,
    "y" => Token::Y,
    "=" => Token::Equals,
  }
}
pub Command: Command = {
    "define" <key:"path"> => {
        Command::Define {define: key, arg: None}
    },
    "define" <key:"path"> "=" <value:"path"> => {
        Command::Define {define: key, arg: Some(value)}
    },
    "incdir" <path:"path"> => {
        Command::Include {directory: path}
    },
    "v" <path:"path"> => {
        Command::V {library_file: path}
    },
    "y" <path:"path"> => {
        Command::Y {library_dir: path}
    },
    <path:"path"> => {
        Command::File{file: path}
    },
}
